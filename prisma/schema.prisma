// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

model topics {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  userId  String @db.ObjectId
  user    users?  @relation(fields: [userId], references: [id])
  
  topicName     String?
  description   String?
  label       String?
  
  notes   notes[] @relation("TopicToNotes")
  links   links[]  @relation("TopicToLinks")
  attachments attachments[] @relation("TopicToAttachments")

  parentId       String?   @db.ObjectId
  parentTopic    topics?     @relation("ChildTopics", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  childTopics    topics[]    @relation("ChildTopics")
}

model users {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  username       String
  email          String    @unique
  password       String
  birthday       DateTime
  securityQuestion String
  accessLevel    String
  createdAt      DateTime  @default(now())
  topics   topics[]
  label          String?
}

model notes {
  id      String @id @default(auto())  @map("_id") @db.ObjectId
  content String
  topicId String @db.ObjectId
  topic   topics @relation("TopicToNotes", fields: [topicId], references: [id])
  label         String?
}

model attachments {
  id      String @id @default(auto())  @map("_id") @db.ObjectId
  content String
  topicId String @db.ObjectId
  topic   topics @relation("TopicToAttachments", fields: [topicId], references: [id])
  label         String?
}
 

model links {
  id      String @id @default(auto())   @map("_id")  @db.ObjectId
  url     String
  topicId String @db.ObjectId
  topic   topics @relation("TopicToLinks", fields: [topicId], references: [id])
  label         String?
}